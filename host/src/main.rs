// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use methods::{
    EMULATOR_ELF, EMULATOR_ID
};
use risc0_zkvm::{default_prover, ExecutorEnv};

fn main() {
    // Initialize tracing. In order to view logs, run `RUST_LOG=info cargo run`
    tracing_subscriber::fmt()
        .with_env_filter(tracing_subscriber::filter::EnvFilter::from_default_env())
        .init();

    let env = ExecutorEnv::builder()
        .build()
        .unwrap();

    // Obtain the default prover.
    let prover = default_prover();

    println!("proving...");

    // Produce a receipt by proving the specified ELF binary.
    let receipt = prover
        .prove(env, EMULATOR_ELF)
        .unwrap();

    println!("receipt...");
    // TODO: Implement code for retrieving receipt journal here.

    // The receipt was verified at the end of proving, but the below code is an
    // example of how someone else could verify this receipt.
    receipt
        .verify(EMULATOR_ID)
        .unwrap();
}
